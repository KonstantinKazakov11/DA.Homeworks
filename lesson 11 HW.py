#–ü—Ä–∞–∫—Ç–∏–∫–∞
#–û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç–∏. –°–æ–±—ã—Ç–∏—è
#–¢—Ä–µ–±—É–µ—Ç—Å—è —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –≤—ã–±–æ—Ä–∫–∏ –∏ –ø—Ä–æ–∏–∑–≤–µ—Å—Ç–∏ –ø–æ –Ω–∏–º —Ä–∞—Å—á–µ—Ç—ã

#–ó–∞–¥–∞—á–∞ 1
#–ë—Ä–æ—à–µ–Ω–æ –¥–≤–µ –º–æ–Ω–µ—Ç—ã. –ù–∞–π—Ç–∏ –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å —Ç–æ–≥–æ, —á—Ç–æ –º–æ–Ω–µ—Ç—ã –≤—ã–ø–∞–ª–∏ —Ä–∞–∑–Ω—ã–º–∏ —Å—Ç–æ—Ä–æ–Ω–∞–º–∏
import random

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import scipy.stats as sts
n = 100000
bernoulli_rv1 = sts.bernoulli(0.5)
bernoulli_rv2 = sts.bernoulli(0.5)
b1 = bernoulli_rv1.rvs(n)
b2 = bernoulli_rv2.rvs(n)
df = pd.DataFrame (zip(b1, b2), columns = ["m1","m2"])
print (df)
print ('–≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å —Ç–æ–≥–æ, —á—Ç–æ –º–æ–Ω–µ—Ç—ã –≤—ã–ø–∞–ª–∏ —Ä–∞–∑–Ω—ã–º–∏ —Å—Ç–æ—Ä–æ–Ω–∞–º–∏ =', df [df.m1 != df.m2 ].shape[0]/n)

#–ó–∞–¥–∞—á–∞ 2
# –ë—Ä–æ—à–µ–Ω–æ —Ç—Ä–∏ –º–æ–Ω–µ—Ç—ã. –û–ø–∏—Å–∞—Ç—å –º–Ω–æ–∂–µ—Å—Ç–≤–æ –≤—Å–µ—Ö —ç–ª–µ–º–µ–Ω—Ç–∞—Ä–Ω—ã—Ö —Å–æ–±—ã—Ç–∏–π. –ù–∞–π—Ç–∏ –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç–∏ —Å–ª–µ–¥—É—é—â–∏—Ö —Å–æ–±—ã—Ç–∏–π:

#A = {–Ω–µ –≤—ã–ø–∞–ª–æ –Ω–∏ –æ–¥–Ω–æ–≥–æ –≥–µ—Ä–±–∞}
#B = {–≤—ã–ø–∞–ª–æ —á–µ—Ç–Ω–æ–µ —á–∏—Å–ª–æ –≥–µ—Ä–±–æ–≤}
#C = {–Ω–∞ —Ç—Ä–µ—Ç—å–µ–π –º–æ–Ω–µ—Ç–µ –≤—ã–ø–∞–ª –≥–µ—Ä–±}
# –ì–µ—Ä–± - 0
n = 100000
bernoulli_rv1 = sts.bernoulli(0.5)
bernoulli_rv2 = sts.bernoulli(0.5)
bernoulli_rv3 = sts.bernoulli(0.5)
b1 = bernoulli_rv1.rvs(n)
b2 = bernoulli_rv2.rvs(n)
b3 = bernoulli_rv3.rvs(n)

df = pd.DataFrame (zip(b1, b2, b3), columns = ["m1","m2","m3" ])
print (df)
print ('–Ω–µ –≤—ã–ø–∞–ª–æ –Ω–∏ –æ–¥–Ω–æ–≥–æ –≥–µ—Ä–±–∞', df [(df.m1 != 0) & (df.m2 != 0) & (df.m3 != 0)].shape[0]/n)
print ('–≤—ã–ø–∞–ª–æ —á–µ—Ç–Ω–æ–µ —á–∏—Å–ª–æ –≥–µ—Ä–±–æ–≤', df [df.m1 + df.m2 + df.m3 == 1].shape[0]/n)
print ('–Ω–∞ —Ç—Ä–µ—Ç—å–µ–π –º–æ–Ω–µ—Ç–µ –≤—ã–ø–∞–ª –≥–µ—Ä–±', df [(df.m3 == 0)].shape[0]/n)

#–ó–∞–¥–∞—á–∞ 3
#–ò–∑ –¥–≤—É—Ö –ø—Ä–µ—Ç–µ–Ω–¥–µ–Ω—Ç–æ–≤ E –∏ L –Ω–∞ –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—É—é –¥–æ–ª–∂–Ω–æ—Å—Ç—å —Ç—Ä–∏ —á–ª–µ–Ω–∞ –∫–æ–º–∏—Å—Å–∏–∏ –¥–æ–ª–∂–Ω—ã –æ—Ç–æ–±—Ä–∞—Ç—å –æ–¥–Ω–æ–≥–æ. –ö–∞–∂–¥—ã–π —á–ª–µ–Ω –∫–æ–º–∏—Å—Å–∏–∏ –¥–æ–ª–∂–µ–Ω —É–∫–∞–∑–∞—Ç—å –ª–∏–±–æ –æ–¥–Ω–æ–≥–æ –¥–æ—Å—Ç–æ–π–Ω–æ–≥–æ, –ª–∏–±–æ –∑–∞–±—Ä–∞–∫–æ–≤–∞—Ç—å –æ–±–æ–∏—Ö. –ü—Ä–µ—Ç–µ–Ω–¥–µ–Ω—Ç —Å—á–∏—Ç–∞–µ—Ç—Å—è –≤—ã–±—Ä–∞–Ω–Ω—ã–º, –µ—Å–ª–∏ –æ–Ω –±—ã–ª –ø—Ä–∏–∑–Ω–∞–Ω–∞ –¥–æ—Å—Ç–æ–π–Ω—ã–º —Ö–æ—Ç—è –±—ã –¥–≤—É–º—è —á–ª–µ–Ω–∞–º–∏ –∫–æ–º–∏—Å—Å–∏–∏. –ù–∞–π—Ç–∏ –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å —Å–æ–±—ã—Ç–∏–π:

#A = {—Ä–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω L}, B = {—Ä–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω E}

#–≤–∞—Ä–∏–∞–Ω—Ç—ã —Ä–µ—à–µ–Ω–∏–π –ø–æ –∫–∞–Ω–¥–∏–¥–∞—Ç–∞–º
a = [[0,1], [1,0], [0,0], [0,1], [1,0], [0,0]]
#–≤—ã–±–∏—Ä–∞–µ–º –ª—é–±—ã–µ 3 –≤–∞—Ä–∏–∞–Ω—Ç–∞
c = random.choices(a, k=3)

# 3 –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç–∏ —Å–æ–±—ã—Ç–∏–π: —Ä–µ–∫–æ–º–µ–Ω—Ç—É—é—Ç L,—Ä–µ–∫–æ–º–µ–Ω–¥—É—é—Ç E,–Ω–∏–∫–æ–≥–æ –Ω–µ —Ä–µ–∫–æ–º–µ–Ω–¥—É—é—Ç
n = 3
df = pd.DataFrame(c, columns = ["E","L" ])
L = np.count_nonzero(df["L"])
E = np.count_nonzero(df["E"])
print (L)
print (E)

print (df)
print ('—Ä–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω L', df [(df.L >=2)].shape[1]/n)
print ('—Ä–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω E', df [(df.E >=2)].shape[1]/n)

#–ó–∞–¥–∞—á–∞ 4
#–ë—Ä–æ—à–µ–Ω–æ –¥–≤–µ –∏–≥—Ä–∞–ª—å–Ω—ã—Ö –∫–æ—Å—Ç–∏. –û–ø–∏—Å–∞—Ç—å –º–Ω–æ–∂–µ—Å—Ç–≤–æ —ç–ª–µ–º–µ–Ω—Ç–∞—Ä–Ω—ã—Ö —Å–æ–±—ã—Ç–∏–π.–ù–∞–π—Ç–∏ –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç–∏ —Å–æ–±—ã—Ç–∏–π:

#A = {–≤—ã—à–ª–æ –¥–≤–µ "—à–µ—Å—Ç–µ—Ä–∫–∏"}
#B = {—Å—É–º–º–∞ –≤—ã–ø–∞–≤—à–∏—Ö –æ—á–∫–æ–≤ –Ω–µ –º–µ–Ω—å—à–µ 11}
#C = {–Ω–µ –≤—ã–ø–∞–ª–∞ –Ω–∏ –æ–¥–Ω–∞ "—à–µ—Å—Ç–µ—Ä–∫–∞"}
#–í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å —Å—É–º–º—ã —Å–æ–±—ã—Ç–∏–π

n = 100000
values1 = []
values2 = []

for x in range(n):
    values1.append(np.random.randint(1, 7))
    values2.append(np.random.randint(1, 7))

df = pd.DataFrame(zip(values1, values2), columns=["cub1", "cub2"])

print(df)

print('–≤—ã—à–ª–æ –¥–≤–µ "—à–µ—Å—Ç–µ—Ä–∫–∏"', df[((df.cub1 == 6) & (df.cub2 == 6))].shape[0] / n)
print('—Å—É–º–º–∞ –≤—ã–ø–∞–≤—à–∏—Ö –æ—á–∫–æ–≤ –Ω–µ –º–µ–Ω—å—à–µ 11', df[((df.cub1 + df.cub2) >= 11)].shape[0] / n)
print('–Ω–µ –≤—ã–ø–∞–ª–∞ –Ω–∏ –æ–¥–Ω–∞ "—à–µ—Å—Ç–µ—Ä–∫–∞"', df[(df.cub1 != 6) & (df.cub2 != 6)].shape[0] / n)

# –ó–∞–¥–∞—á–∞ 5 –ë—Ä–æ—à–µ–Ω—ã –¥–≤–µ –∏–≥—Ä–∞–ª—å–Ω—ã–µ –∫–æ—Å—Ç–∏.–ù–∞–π—Ç–∏ –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å —Å–æ–±—ã—Ç–∏—è D = {–≤—ã–ø–∞–ª–∞ —Ö–æ—Ç—è –±—ã –æ–¥–Ω–∞ —à–µ—Å—Ç—ë—Ä–∫–∞}

n = 10000
values1 = []
values2 = []

for x in range(n):
    values1.append(np.random.randint(1, 7))
    values2.append(np.random.randint(1, 7))

df = pd.DataFrame(zip(values1, values2), columns=["cub1", "cub2"])

print(df)

print('–≤—ã–ø–∞–ª–∞ —Ö–æ—Ç—è –±—ã –æ–¥–Ω–∞ —à–µ—Å—Ç—ë—Ä–∫–∞', \
      df[((df.cub1 == 6) & (df.cub2 != 6)) | ((df.cub1 != 6) & (df.cub2 == 6)) | (
                  (df.cub1 == 6) & (df.cub2 == 6))].shape[0] / n)

#–ó–∞–¥–∞—á–∞ 6 –í —Ç–µ–ª–µ—Ñ–æ–Ω–Ω–æ–º –Ω–æ–º–µ—Ä–µ —Ç—Ä–∏ –ø–æ—Å–ª–µ–¥–Ω–∏–µ —Ü–∏—Ñ—Ä—ã —Å—Ç–µ—Ä–ª–∏—Å—å. –°—á–∏—Ç–∞—è, —á—Ç–æ –≤—Å–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è —Å—Ç–µ—Ä—à–∏—Ö—Å—è —Ü–∏—Ñ—Ä —Ä–∞–≤–Ω–æ–≤–µ—Ä–æ—è—Ç–Ω—ã, –Ω–∞–π—Ç–∏ –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å —Å–æ–±—ã—Ç–∏–π:

#A = {–°—Ç–µ—Ä–ª–∏—Å—å —Ä–∞–∑–ª–∏—á–Ω—ã–µ —Ü–∏—Ñ—Ä—ã},
#B = {–°—Ç–µ—Ä–ª–∏—Å—å –æ–¥–∏–Ω–∞–∫–æ–≤—ã–µ —Ü–∏—Ñ—Ä—ã},
#C = {–°—Ä–µ–¥–∏ —Å—Ç–µ—Ä—à–∏—Ö—Å—è —Ü–∏—Ñ—Ä —Ö–æ—Ç—è –±—ã –¥–≤–µ —Å–æ–≤–ø–∞–¥–∞—é—Ç},
#D = {–°—Ä–µ–¥–∏ —Å—Ç–µ—Ä—à–∏—Ö—Å—è —Ü–∏—Ñ—Ä —Ö–æ—Ç—è –±—ã –¥–≤–µ —Ä–∞–∑–ª–∏—á–Ω—ã}

n=100000
num1 = []
num2 = []
num3 = []

for x in range(n):
    num1.append (np.random.randint(0, 10))
    num2.append (np.random.randint(0, 10))
    num3.append (np.random.randint(0, 10))
df = pd.DataFrame(zip(num1, num2, num3 ), columns = ["num1","num2", "num3"] )

print (df)

print ('–°—Ç–µ—Ä–ª–∏—Å—å —Ä–∞–∑–ª–∏—á–Ω—ã–µ —Ü–∏—Ñ—Ä—ã',\
       df [(df.num1 != df.num2)& (df.num1 != df.num3)& (df.num2 != df.num3)].shape[0]/n)
print ('–°—Ç–µ—Ä–ª–∏—Å—å –æ–¥–∏–Ω–∞–∫–æ–≤—ã–µ —Ü–∏—Ñ—Ä—ã',\
       df [(df.num1 == df.num2)& (df.num1 == df.num3)& (df.num2 == df.num3)].shape[0]/n )
print ('–°—Ä–µ–¥–∏ —Å—Ç–µ—Ä—à–∏—Ö—Å—è —Ü–∏—Ñ—Ä —Ö–æ—Ç—è –±—ã –¥–≤–µ —Å–æ–≤–ø–∞–¥–∞—é—Ç',\
       df [(df.num1 == df.num2)|(df.num1 == df.num3)|(df.num2 == df.num3)].shape[0]/n )
print ('–°—Ä–µ–¥–∏ —Å—Ç–µ—Ä—à–∏—Ö—Å—è —Ü–∏—Ñ—Ä —Ö–æ—Ç—è –±—ã –¥–≤–µ —Ä–∞–∑–ª–∏—á–Ω—ã',\
       df [(df.num1 != df.num2)| (df.num1 != df.num3)|(df.num2 != df.num3)].shape[0]/n )

#–°–ª—É—á–∞–π–Ω—ã–µ –≤–µ–ª–∏—á–∏–Ω—ã
#–ó–∞–¥–∞—á–∞ 7
#–í –ª–æ—Ç–µ—Ä–µ–µ –∏–º–µ–µ—Ç—Å—è 10 –±–∏–ª–µ—Ç–æ–≤, –∏–∑ –∫–æ—Ç–æ—Ä—ã—Ö –æ–¥–∏–Ω –≤—ã–∏–≥—Ä—ã—à–Ω—ã–π. –†–∞–∑–º–µ—Ä –≤—ã–∏–≥—Ä—ã—à–∞ 10 –¥–µ–Ω. –µ–¥.; —Å—Ç–æ–∏–º–æ—Å—Ç—å –±–∏–ª–µ—Ç–∞ 1 –¥–µ–Ω –µ–¥. –ù–∞–π—Ç–∏ –∑–∞–∫–æ–Ω —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Å–ª—É—á–∞–π–Ω–æ–π –≤–µ–ª–∏—á–∏–Ω—ã X, —Ä–∞–≤–Ω–æ–π —á–∏—Å—Ç–æ–º—É –≤—ã–∏–≥—Ä—ã—à—É —É—á–∞—Å—Ç–Ω–∏–∫–∞ –ª–æ—Ç–µ—Ä–µ–∏, –∫–æ—Ç–æ—Ä—ã–π –≤—ã—Ç–∞—Å–∫–∏–≤–∞–µ—Ç –±–∏–ª–µ—Ç –ø–µ—Ä–≤—ã–º.

import random
lst = [0,0,0,0,0,0,0,0,0,1]
n = len(lst)
random.shuffle(lst, random.random)
df = pd.DataFrame(lst)
print (df)

#–≤–æ–∑–º–æ–∂–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è X: x1 = 10, x2= 0.
#–í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç–∏   —ç—Ç–∏—Ö   –≤–æ–∑–º–æ–∂–Ω—ã—Ö   –∑–Ω–∞—á–µ–Ω–∏–π —Ç–∞–∫–æ–≤—ã: p1=0.1, p2=0,9.
print ('–≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å –≤—ã–∏–≥—Ä—ã—à–∞ 10 –¥–µ–Ω.–µ–¥: ', df [df[0] ==1 ].shape[0]/n)
print ('–≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å –ø—Ä–æ–∏–≥—Ä—ã—à–∞ ', df [df[0] ==0 ].shape[0]/n)

#–ó–∞–¥–∞—á–∞ 8
#–ë—Ä–æ—à–µ–Ω—ã –¥–≤–µ –∏–≥—Ä–∞–ª—å–Ω—ã–µ –∫–æ—Å—Ç–∏. –ù–∞–π—Ç–∏ –∑–∞–∫–æ–Ω —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Å–ª—É—á–∞–π–Ω–æ–π –≤–µ–ª–∏—á–∏–Ω—ã , —Ä–∞–≤–Ω–æ–π —Å—É–º–º–µ –≤—ã–ø–∞–≤—à–∏—Ö –æ—á–∫–æ–≤. –ù–∞–π—Ç–∏ –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç–∏ —Å–æ–±—ã—Ç–∏–π X<=4, X>4
n=10000
values = []

for x in range(n):
    values.append(np.random.randint(1, 7) + np.random.randint(1, 7))
df = pd.DataFrame(values)

print(df)
print ('–≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç–∏ —Å–æ–±—ã—Ç–∏–π  ùëã<=4 ', df [df[0] <= 4 ].shape[0]/n)
print ('–≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç–∏ —Å–æ–±—ã—Ç–∏–π  ùëã>4 ', df [df[0] > 4 ].shape[0]/n)